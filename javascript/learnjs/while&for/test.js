// let i = 0;

// for (i = 0; i < 3; i++) { // используем существующую переменную
//   alert(i); // 0, 1, 2
// }

// alert(i); // 3, переменная доступна, т.к. была объявлена снаружи цикла



// выводит только нечётные числа
// for (let i = 0; i < 10; i++) {

//   // если true, пропустить оставшуюся часть тела цикла
//   if (i % 2 == 0) continue;

//   alert(i); // 1, затем 3, 5, 7, 9
// }



// метки
// outer: for (let i = 0; i < 3; i++) {

//   for (let j = 0; j < 3; j++) {

//     let input = prompt(`Значение на координатах (${i},${j})`, '');

//     // если пустая строка или Отмена, то выйти из обоих циклов
//     if (!input) break outer; // (*)

//     // сделать что-нибудь со значениями...
//   }
// }

// alert('Готово!');



// Какие значения выведет цикл while?
// Префиксный вариант ++i
// let i = 0; 
// while (++i < 5) alert( i ); //От 1 до 4

// Постфиксный вариант i++
// let i = 0;
// while (i++ < 5) alert( i ); //От 1 до 5

// let i = 0;
// for (; i < 5;) {
//   alert(i);  //От 0 до 4, и так i++, и так ++i
//   i++;
// }



// заменить цикол for на while
// for (let i = 0; i < 3; i++) {
//   alert( `number ${i}!` );
// }

// let i = 0;
// while (i < 3) {
//   alert(`number ${i}!`);
//   i++;
// }


// Повторять цикл, пока ввод неверен
// Напишите цикл, который предлагает prompt ввести число, большее 100.
// Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.
// Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).
// Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.

// let num;
// do {
//   num = prompt("Введите число, большее 100?", "");
// } while (num <= 100 && num);



// Выведите чётные числа
// for (let i = 2; i <= 10; i++) {
//   if (i % 2 == 0) {
//     alert(i); 
//   }
// }



// Вывести простые числа
// Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
// Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.
// Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.
// Напишите код, который выводит все простые числа из интервала от 2 до n.
// Для n = 10 результат должен быть 2,3,5,7.

// Для всех i от 1 до 10 {
//   проверить, делится ли число i на какое-либо из чисел до него
//   если делится, то это i не подходит, берём следующее
//   если не делится, то i - простое число
// }
// Решение с использованием метки:

let n = 10;

nextPrime:
for (let i = 2; i <= n; i++) { // Для всех i...

  for (let j = 2; j < i; j++) { // проверить, делится ли число..
    if (i % j == 0) continue nextPrime; // не подходит, берём следующее
  }

  alert( i ); // простое число
}





